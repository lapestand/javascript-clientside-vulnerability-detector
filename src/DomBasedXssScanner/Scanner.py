import logging
import requests

from src import utils


class DomXSSAnalyzer:
    def __init__(self):
        pass


class StaticAnalyzer(DomXSSAnalyzer):
    def __init__(self):
        super().__init__()
        self.payloads = ["<script>alert('XSS')</script>", "%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E"]
        self.report = None
        self.sources = r'''document\.(URL|documentURI|URLUnencoded|baseURI|cookie|referrer)|location\.(
        href|search|hash|pathname)|window\.name|history\.(pushState|replaceState)(local|session)Storage '''
        self.sinks = r'''eval|evaluate|execCommand|assign|navigate|getResponseHeaderopen|showModalDialog|Function
        |set(Timeout|Interval|Immediate)|execScript|crypto.generateCRMFRequest|ScriptElement\.(
        src|text|textContent|innerText)|.*?\.onEventName|document\.(
        write|writeln)|.*?\.innerHTML|Range\.createContextualFragment|(document|window)\.location '''

    def scan(self, url):
        logging.debug("Scanning started for %s", url)

        for payload in self.payloads:
            r_xss = requests.get(url + payload)
            if payload.lower() in r_xss.text.lower():
                print(f"URL is vulnerable, payload = {payload}")


class DynamicAnalyzer(DomXSSAnalyzer):
    def __init__(self):
        super().__init__()


class BlackBoxAnalyzer(DomXSSAnalyzer):
    def __init__(self):
        super().__init__()
