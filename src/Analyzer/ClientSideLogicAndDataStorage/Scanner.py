import sys

import logging
import requests
import json
from src import utils

class ClientSideLogicAndDataStorage:
    def __init__(self):
        pass

class StaticAnalyzer(ClientSideLogicAndDataStorage):
    def __init__(self):
        super().__init__()
        self.vulns   = []
        self.robots_founded = False

    def scan(self, session):
        if not self.robots_founded:
            self.vulns.extend(self.robot_in(session.find("meta")))
            self.robots_founded = True
        self.vulns.extend(self.get_in_js(session.find("script")))
        
        
    def robot_in(self, _meta):
        vulns = []
        for mt in _meta:
            if "name" in mt.attrs:
                if mt.attrs["name"].lower() == "robots":
                    vulns.append(mt)                                                                                                                                                                                                                                                                                                                                                                                                    
        return vulns
    
    def get_in_js(self, _cookie):
        vulns = []
        for ck in _cookie:
            if "document.cookie" in ck.attrs:
                if ck.attrs["document.cookie"].lower() != "secure;":
                    vulns.append(ck)
                if ck.attrs["document.cookie"].lower() != "samesite=none":
                    vulns.append(ck)
                if ck.attrs["document.cookie"].lower() != "httponly":
                    vulns.append(ck)
        return vulns
        